name: Build and Deploy to AKS

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT || secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ghcr.io/greenbowalabama/launch-line:latest \
            --push .

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set kube context
        run: |
          az aks get-credentials \
            --resource-group launch-labs-dev-rg \
            --name launch-labs-aks \
            --overwrite-existing

      - name: Deploy MediaMTX ConfigMap and Rollout
        run: |
          chmod +x scripts/deploy-with-configmap.sh
          ./scripts/deploy-with-configmap.sh \
            --namespace mediamtx \
            --deployment mediamtx \
            --configmap mediamtx-config \
            --configfile k8s/mediamtx.yml

      - name: Deploy application to AKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Restart application
        run: |
          kubectl rollout restart deployment launch-labs-app
